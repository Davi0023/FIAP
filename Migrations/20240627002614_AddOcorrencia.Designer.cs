// <auto-generated />
using System;
using Fiap.Web.Challenge.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Fiap.Web.Challenge.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240627002614_AddOcorrencia")]
    partial class AddOcorrencia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fiap.Web.Challenge.Models.LocalModel", b =>
                {
                    b.Property<int>("id_local")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_local"));

                    b.Property<string>("ds_coordenadas")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("id_orgao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("nm_oceano")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_local");

                    b.HasIndex("id_orgao");

                    b.ToTable("Local", (string)null);
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.OcorrenciaModel", b =>
                {
                    b.Property<int>("id_ocorrencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_ocorrencia"));

                    b.Property<int?>("Poluenteid_poluente")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("dt_ocorrencia")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("id_poluente")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("id_sensor")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id_ocorrencia");

                    b.HasIndex("Poluenteid_poluente");

                    b.HasIndex("id_sensor");

                    b.ToTable("Ocorrencia", (string)null);
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.OrgaoModel", b =>
                {
                    b.Property<int>("id_orgao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_orgao"));

                    b.Property<int>("NrDdd")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ds_bairro")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_cep")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_complemento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_endereco")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_pais")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("nm_orgao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("nr_ddi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("nr_numero")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("nr_telefone")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id_orgao");

                    b.ToTable("Orgao", (string)null);
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.PoluenteModel", b =>
                {
                    b.Property<int>("id_poluente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_poluente"));

                    b.Property<string>("nm_poluente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("tp_poluente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_poluente");

                    b.ToTable("Poluente", (string)null);
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.SensoresModel", b =>
                {
                    b.Property<int>("id_sensor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_sensor"));

                    b.Property<string>("ds_fabricante")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ds_modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("id_local")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("nm_oceano")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_sensor");

                    b.HasIndex("id_local");

                    b.ToTable("Sensores", (string)null);
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.LocalModel", b =>
                {
                    b.HasOne("Fiap.Web.Challenge.Models.OrgaoModel", "Orgao")
                        .WithMany()
                        .HasForeignKey("id_orgao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orgao");
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.OcorrenciaModel", b =>
                {
                    b.HasOne("Fiap.Web.Challenge.Models.PoluenteModel", "Poluente")
                        .WithMany()
                        .HasForeignKey("Poluenteid_poluente");

                    b.HasOne("Fiap.Web.Challenge.Models.SensoresModel", "Sensores")
                        .WithMany()
                        .HasForeignKey("id_sensor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poluente");

                    b.Navigation("Sensores");
                });

            modelBuilder.Entity("Fiap.Web.Challenge.Models.SensoresModel", b =>
                {
                    b.HasOne("Fiap.Web.Challenge.Models.LocalModel", "Local")
                        .WithMany()
                        .HasForeignKey("id_local")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });
#pragma warning restore 612, 618
        }
    }
}
